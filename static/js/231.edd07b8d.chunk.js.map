{"version":3,"file":"static/js/231.edd07b8d.chunk.js","mappings":"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","sources":["components/reusableComponents/Button/Button.js","components/reusableComponents/InfoText/InfoText.js","components/reusableComponents/Section/Section.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/AddInfoMenu/AddInfoMenu.styled.js","components/AddInfoMenu/AddInfoMenu.jsx","pages/MovieDetails/MovieDetails.jsx","services/themoviedb-API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  font-size: ${({ theme }) => theme.fontSizes[2]}px;\n  display: inline-block;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  color: ${({ theme }) => theme.colors.background};\n  font-weight: ${({ theme }) => theme.fontWeights.heading};\n  cursor: pointer;\n\n  transition: transform 200ms;\n\n  :active {\n    transform: translateY(2px);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const InfoText = styled.p`\n  margin-bottom: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const MovieTitle = styled.p`\n  margin-bottom: 10px;\n  font-size: ${({ theme }) => theme.fontSizes[4]}px;\n  font-weight: ${({ theme }) => theme.fontWeights.heading};\n`;\n\nexport const InfoTag = styled.p`\n  margin-bottom: 10px;\n  font-size: ${({ theme }) => theme.fontSizes[2]}px;\n  font-weight: ${({ theme }) => theme.fontWeights.heading};\n`;\n","/** @jsxImportSource theme-ui */\n\nimport PropTypes from 'prop-types';\nimport { InfoTag, MovieTitle } from './MovieInfo.styled';\nimport { InfoText } from 'components/reusableComponents/InfoText/InfoText';\n\nexport default function MovieInfo({ movieInfo }) {\n  const { posterUrl, title, releaseYear, userScore, genresList, overview } =\n    movieInfo;\n\n  return (\n    <div sx={{ display: 'flex', mt: 24, mb: 24, gap: 24 }}>\n      <div sx={{ minWidth: 'fit-content' }}>\n        <img src={posterUrl} alt={`${title} movie poster`} />\n      </div>\n\n      <div sx={{ maxWidth: 800 }}>\n        <MovieTitle>\n          {title} ({releaseYear})\n        </MovieTitle>\n        <InfoTag>User Score {userScore}%</InfoTag>\n        <InfoTag>Overview:</InfoTag>\n        <InfoText>{overview}</InfoText>\n        <InfoTag>Genres:</InfoTag>\n        <InfoText>{genresList}</InfoText>\n      </div>\n    </div>\n  );\n}\n\nMovieInfo.propTypes = {\n  movieInfo: PropTypes.shape({\n    posterUrl: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    releaseYear: PropTypes.number.isRequired,\n    userScore: PropTypes.number.isRequired,\n    genresList: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MenuList = styled.ul`\n  display: flex;\n  gap: 32px;\n  margin: 10px 0;\n`;\n\nexport const MenuLink = styled(NavLink)`\n  color: inherit;\n  font-size: ${({ theme }) => theme.fontSizes[3]}px;\n  font-weight: ${({ theme }) => theme.fontWeights.heading};\n  text-decoration: none;\n\n  &.active {\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n","import { MenuLink, MenuList } from './AddInfoMenu.styled';\n\nexport default function AddInfoMenu() {\n  return (\n    <>\n      <h2>Additional information:</h2>\n      <MenuList>\n        <li>\n          <MenuLink to=\"cast\">Cast</MenuLink>\n        </li>\n        <li>\n          <MenuLink to=\"reviews\">Review</MenuLink>\n        </li>\n      </MenuList>\n    </>\n  );\n}\n","import { Section } from 'components/reusableComponents/Section/Section';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Button } from 'components/reusableComponents/Button/Button';\nimport * as API from '../../services/themoviedb-API';\nimport MovieInfo from 'components/MovieInfo';\nimport AddInfoMenu from 'components/AddInfoMenu';\nimport { useRef } from 'react';\n\nexport default function MovieDetails() {\n  const [movieInfo, setMovieInfo] = useState({});\n  const { id: movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    API.getMovieInfo(movieId, controller)\n      .then(setMovieInfo)\n      .catch(error => console.log('get movie info error - ', error));\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Section>\n      <Link to={backLinkHref.current}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n      {movieInfo.title && <MovieInfo movieInfo={movieInfo} />}\n      <AddInfoMenu />\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n}\n","import axios from 'axios';\nimport noPhoto from '../images/no-photo.jpg';\n\nconst KEY = 'e8f4d647cde955cba1306001955cfd97';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: KEY,\n};\n\nexport const getTrendingMovies = async controller => {\n  const response = await axios.get('/trending/movie/week', {\n    params: params,\n    signal: controller.signal,\n  });\n  return normalizeMoviesData(response.data.results);\n};\n\nexport const fetchMovies = async (query, controller) => {\n  const searchParams = { ...params, query: query };\n\n  const response = await axios.get('/search/movie', {\n    params: searchParams,\n    signal: controller.signal,\n  });\n\n  return normalizeMoviesData(response.data.results);\n};\n\nexport const getMovieInfo = async (id, controller) => {\n  const response = await axios.get(`/movie/${id}`, {\n    params: params,\n    signal: controller.signal,\n  });\n\n  return normalizeMovieInfo(response.data);\n};\n\nexport const getMovieCast = async (id, controller) => {\n  const response = await axios.get(`/movie/${id}/credits`, {\n    params: params,\n    signal: controller.signal,\n  });\n\n  return normalizeCastData(response.data.cast);\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`, { params: params });\n\n  return normalizeReviewsData(response.data.results);\n};\n\nexport const normalizeMoviesData = data =>\n  data.map(({ id, title }) => ({ id, title }));\n\nexport const normalizeMovieInfo = movieInfo => {\n  const { poster_path, title, release_date, vote_average, genres, overview } =\n    movieInfo;\n\n  const genresList = genres.map(({ name }) => name).join(', ');\n  const userScore = Math.floor(vote_average * 10);\n  const releaseYear = parseInt(release_date);\n  const posterUrl = poster_path ? IMAGE_BASE_URL + poster_path : noPhoto;\n\n  return {\n    posterUrl,\n    title,\n    releaseYear,\n    userScore,\n    genresList,\n    overview,\n  };\n};\n\nexport const normalizeCastData = data => {\n  return data.map(({ id, name, character, profile_path }) => {\n    const fotoURL = profile_path ? IMAGE_BASE_URL + profile_path : noPhoto;\n    return { id, name, character, fotoURL };\n  });\n};\n\nexport const normalizeReviewsData = data => {\n  return data.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["Button","styled","theme","fontSizes","colors","gray","secondary","background","fontWeights","heading","InfoText","Section","MovieTitle","InfoTag","MovieInfo","movieInfo","posterUrl","title","releaseYear","userScore","genresList","overview","sx","display","mt","mb","gap","minWidth","src","alt","maxWidth","MenuList","MenuLink","NavLink","AddInfoMenu","to","MovieDetails","useState","setMovieInfo","movieId","useParams","id","location","useLocation","backLinkHref","useRef","state","from","useEffect","controller","AbortController","API","then","catch","error","console","log","abort","current","type","Suspense","fallback","IMAGE_BASE_URL","axios","params","api_key","getTrendingMovies","signal","response","normalizeMoviesData","data","results","fetchMovies","query","searchParams","getMovieInfo","normalizeMovieInfo","getMovieCast","normalizeCastData","cast","getMovieReviews","normalizeReviewsData","map","poster_path","release_date","vote_average","genres","name","join","Math","floor","parseInt","noPhoto","character","profile_path","fotoURL","author","content"],"sourceRoot":""}